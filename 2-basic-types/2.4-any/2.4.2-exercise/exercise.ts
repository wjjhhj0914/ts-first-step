// --------------------------------------------------------------------------
// ✅ TypeScript의 `any` 타입
// --------------------------------------------------------------------------

// 1. `any` 타입으로 변수를 선언하고 문자열 값을 할당하세요.
let name: any = 'Hyojung';

// 2. 그 변수를 숫자로 다시 할당하세요.
name = 26;

// 3. 그 변수를 name 프로퍼티가 "TS"인 객체로 다시 할당하세요.
name = { name: 'TS' };

// 4. 매개변수 타입이 `any`인 함수를 만들고, 그 타입과 값을 로그로 출력하세요.
function anyType(value: any) {
  console.log(value);
}

anyType('Hiya!');
anyType(2025);

// 5. 그 함수를 문자열, 숫자, 객체, 배열 등 다양한 타입의 인자로 호출하세요.
anyType({ name: 'Hyojung', age: 26 });
anyType(['index0', 'index1']);

// 6. TypeScript에서 `any`를 사용하는 것이 왜 유용할 수도 있고, 동시에 문제가 될 수도 있는지 설명하세요.
// any 타입을 사용하면 자바스크립트 프로젝트를 타입스크립트로 마이그레이션하는 과정에서 모든 타입 오류를 한 번에 처리할 수 없을 때 유용합니다.
// 하지만 any 타입은 너무 유연하여 어떤 값이든 들어갈 수 있기 때문에 타입 검사가 비활성화되어 오류를 잡는 것이 불가능해집니다.